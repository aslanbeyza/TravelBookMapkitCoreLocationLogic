//
//  ViewController.swift
//  TravelBook
//
//  Created by Beyza Aslan on 26.02.2025.
//
import UIKit
import MapKit //harita iÃ§in
import CoreLocation //konumunu almak iÃ§in
import CoreData  //modellerle iÅŸin varsa importu unutma kardesimm :D

// uygulama kapsamÄ±nda kullanÄ±cÄ±nÄ±n lokasyonunu bulmam lazÄ±m geziyo gÃ¶rÃ¼yo orayÄ± iÅŸaretlicek kaydetcek o yÃ¼zden bi onu Ã¶ÄŸrenmemiz lazÄ±m 2. si harita aÃ§Ä±ldÄ±ÄŸÄ±nda Ã§ok zoom edilmemiÅŸ ÅŸeklinde aÃ§Ä±lÄ±yo nasÄ±l zoom yapÄ±lÄ±r vs onlarÄ± ogrenemmÄ±z lazÄ±m
//kullancÄ± konumunu alma mapkit ile olmuyo aslÄ±nda  haritalarla kullanÄ±cÄ±nÄ±n konumunu almak arasÄ±nda pek bir baÄŸlantÄ± yok
class ViewController: UIViewController , MKMapViewDelegate, CLLocationManagerDelegate{

    @IBOutlet weak var mapView: MKMapView!
    //konum ile alakalÄ± birÅŸey yapÄ±yorsanÄ±z bunu kullanmanÄ±z lazÄ±m diyo yani kullanÄ±cÄ±nÄ±n konumunu alÄ±caksan kullanÄ±cÄ±nÄ±n konumu ile ilgili iÅŸlemler yapÄ±caksam ve bunu kendi haritamda gÃ¶stericeksem vs bunu kullanmam lazÄ±m
    var locationManager:CLLocationManager!
    
    @IBOutlet weak var nameText: UITextField!
    @IBOutlet weak var commentText: UITextField!
    
    var chosenLatitude = Double()
    var chosenLongitude = Double()
    
    var selectedTitle = ""
    var selectedTitleID:UUID?
    
    var annotationTitle = ""
    var annotationSubTitle = ""
    var annotationLatitude = Double()
    var annotationLongitude = Double()
    
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        mapView.delegate = self
        locationManager = CLLocationManager()
        locationManager.delegate = self
        locationManager.desiredAccuracy = kCLLocationAccuracyBest //en Ã§ok pil yiyo sadece ama tam konumu bulamk iÃ§in lazÄ±m
        locationManager.requestWhenInUseAuthorization() //app imi kullanÄ±rken
        locationManager.startUpdatingLocation() //kullanÄ±cÄ±nÄ±n yerini bununla alÄ±yoruz
        
        let gestureRecognizer = UILongPressGestureRecognizer(target: self, action: #selector(chooseLocation(gestureRecognizer:)))
        gestureRecognizer.minimumPressDuration = 3  //3 sn basarsa bunu algÄ±la
        mapView.addGestureRecognizer(gestureRecognizer)
        
        
        if selectedTitle != "" {
            //Core datadan Ã§ekicez FÄ°ltreleme sadece id si ÅŸu olanÄ± Ã§aÄŸÄ±r diyoruz
            //napÄ±yoruz entity e kaydederken appdelegate Ä± cagÄ±rÄ±yoruz
            let appdelegate = UIApplication.shared.delegate as! AppDelegate
            let context = appdelegate.persistentContainer.viewContext
            let fetchRequest = NSFetchRequest<NSFetchRequestResult>(entityName: "Places")
            let idString = selectedTitleID!.uuidString
            fetchRequest.predicate = NSPredicate(format: "id == %@",idString)
            fetchRequest.returnsObjectsAsFaults = false
            
            do {
                let results = try context.fetch(fetchRequest)
                if results.count > 0 {
                    for result in results as! [NSManagedObject] {
                        if let title  = result.value(forKey: "title") as? String{
                            annotationTitle = title
                        }
                        if let subTitle = result.value(forKey: "subTitle") as? String{
                            annotationSubTitle = subTitle
                            
                        }
                        if let latitude = result.value(forKey: "latitude") as? Double{
                             annotationLatitude = latitude
                        }
                        
                        if let longitude = result.value(forKey: "longitude") as? Double{
                            annotationLongitude = longitude
                            
                            
                            let annotation = MKPointAnnotation() //Bu bir pin oluÅŸturur
                            annotation.title = annotationTitle
                            annotation.subtitle = annotationSubTitle
                         let coordinate = CLLocationCoordinate2D(latitude: annotationLatitude, longitude: annotationLongitude)
                            mapView.addAnnotation(annotation)
                            annotation.coordinate = coordinate
                            mapView.addAnnotation(annotation)
                            nameText.text = annotationTitle
                            commentText.text = annotationSubTitle
                            locationManager.stopUpdatingLocation() //kullanÄ±cÄ±nÄ±n yerini durdur
                            let span = MKCoordinateSpan(latitudeDelta: 0.01, longitudeDelta: 0.01)
                            let region = MKCoordinateRegion(center: coordinate, span: span)
                            mapView.setRegion(region, animated: true)  //Bu kod Swift programlama dilinde MapKit frameworkâ€™Ã¼ kullanÄ±larak bir harita gÃ¶rÃ¼ntÃ¼sÃ¼nÃ¼ belirli bir bÃ¶lgeye (region) odaklamak iÃ§in kullanÄ±lÄ±r.
                        }
                    }
                }
            } catch  {
                print("Hata: \(error)")
            }

            
            
        }
    }
    
    @objc func chooseLocation(gestureRecognizer: UILongPressGestureRecognizer) {
        //adam uzun bastÄ± basladÄ± mesela ya da cancel dedi falan
        if gestureRecognizer.state == .began {
               //dokunulan noktalarÄ± alÄ±cam
            let touchedPoint = gestureRecognizer.location(in: mapView)
//            convert nerden Ã§evireyim ve nereye Ã§evireyim noktayÄ± koordidnat sistemne Ã§evirecektir dokunulan koordinatlarÄ± vericek
            let touchedCoordinates = mapView.convert(touchedPoint, toCoordinateFrom: self.mapView)
            chosenLatitude = touchedCoordinates.latitude
            chosenLongitude = touchedCoordinates.longitude
            let annotation = MKPointAnnotation()
            annotation.coordinate = touchedCoordinates
            annotation.title = "ğŸ’• (\(nameText.text ?? "Bu noktadayÄ±Ä±zzz"))"
            annotation.subtitle = commentText.text
            self.mapView.addAnnotation(annotation)
        }
    }
     //bu bana gÃ¼ncellenen loksayonlarÄ± dizi iÃ§inde veriyor bana devamlÄ± gÃ¼ncelleniyo ya ondan dizi iÃ§inde veriyor gÃ¼ncellendikÃ§e lokasyonlarÄ± alabiliyorum ilk lokasyonu alsak bize yeter BU locationManager FONKSÄ°YONLA BELÄ°RTÄ°LEN ENLEM VE BOYLAMA ZOOM YAPCAK
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        if selectedTitle == "" {
            //CLLocation: bu iÃ§inde enlem ve boylam barÄ±ndÄ±rÄ±yor bi tane lokasyon oluÅŸturucam bu oluÅŸturduÄŸum lokasyona zoomla dicem
            let location = CLLocationCoordinate2D(latitude: locations[0].coordinate.latitude, longitude:locations[0].coordinate.longitude)
            //zoom  seviyesi ayarlamamÄ±z lazÄ±m bide
            let span = MKCoordinateSpan(latitudeDelta: 0.5, longitudeDelta: 0.5)
            //nereyi merkez alcak locaiton kÄ±smÄ±nÄ± dedik zaten
            let region = MKCoordinateRegion(center: location, span: span)
            mapView.setRegion(region, animated: true)
        }
        else
        {
            //
        }
    }
    //Pin Ã¶zelleÅŸtirme i var ya o tÄ±klandÄ±gÄ±nÄ± anlarsak  yapcaz
    func mapView(_ mapView: MKMapView, viewFor annotation: any MKAnnotation) -> MKAnnotationView? {
        if annotation is MKUserLocation {  //kulanÄ±cÄ±nÄ±n yerini gÃ¶stren anatasyon ben bunu istemiyorum
            return nil
        }
        let reuseId = "myAnnotation"
        var pinView = mapView.dequeueReusableAnnotationView(withIdentifier: reuseId) as? MKMarkerAnnotationView
        if pinView == nil {
            pinView = MKMarkerAnnotationView(annotation: annotation, reuseIdentifier: reuseId)
            pinView?.canShowCallout = true //bir baloncukla birlikte eksta bilgi gÃ¶sterebildiÄŸimiz yer
            pinView?.tintColor = UIColor.black  //pinler kÄ±rmÄ±zÄ± Ã§Ä±kÄ±yo ya  onu siyah da gÃ¶sterebiliriz bu ÅŸekilde
            let button = UIButton(type: .detailDisclosure) //detay gÃ¶stereceÄŸim bir buton
            pinView?.rightCalloutAccessoryView = button //ssaÄŸ tarafÄ±nda gÃ¶ster butonu
        }else {
            pinView?.annotation = annotation
        }
        return pinView
    }
    // i var ya o tÄ±klandÄ±gÄ±nÄ± anlarsak  yapcaz onun iÃ§inde calloutAccessoryControlTapped fonsiyonu kullanÄ±lÄ±yo
    func mapView(_ mapView: MKMapView, annotationView view: MKAnnotationView, calloutAccessoryControlTapped control: UIControl) {
        if selectedTitle != "" {
            var requestLocation = CLLocation(latitude: annotationLatitude, longitude: annotationLongitude)
            //koordinatlar ve yerler arasÄ±nda baÄŸlantÄ± kurmamÄ±za yarar CLGeocoder
            CLGeocoder().reverseGeocodeLocation(requestLocation) {(placemarks, error) in
                if let placemark = placemarks {
                    if placemark.count > 0 {
                        let newPlacemark = MKPlacemark(placemark: placemark[0])
                        let item = MKMapItem(placemark: newPlacemark)
                        item .name = self.annotationTitle
                        let launchOptions = [MKLaunchOptionsDirectionsModeKey: MKLaunchOptionsDirectionsModeDriving ]
                        item.openInMaps(launchOptions: launchOptions)
                    }
                }
            }
            }
        }
    
    @IBAction func saveButtonClicked(_ sender: Any) {
        //napÄ±yoruz entity e kaydederken appdelegate Ä± cagÄ±rÄ±yoruz
        let appdelegate = UIApplication.shared.delegate as! AppDelegate
        let context = appdelegate.persistentContainer.viewContext
        //ÅŸimdi kullanÄ±cÄ±nÄ±n kaydetmek iÃ§in koycaÄŸÄ±mÄ±z yere geldik yarabbi ÅŸÃ¼kÃ¼rr
        let newPlace = NSEntityDescription.insertNewObject(forEntityName: "Places", into: context)
        newPlace.setValue(nameText.text, forKey: "title")
        newPlace.setValue(commentText.text, forKey: "subTitle")
        newPlace.setValue(chosenLatitude, forKey: "latitude")
        newPlace.setValue(chosenLongitude, forKey: "longitude")
        newPlace.setValue(UUID(), forKey: "id")

       //hepsini giridk simdi context.save yapcaz ama do try catch le alÄ±ÅŸ buna kardeÅŸ
        do {
            try context.save()
            print("veritabanÄ±na kayÄ±t baÅŸarÄ±lÄ±")
        } catch  {
            print("veritabanÄ±na kayÄ±t baÅŸarÄ±sÄ±z")
        }
        //save button da iÅŸlemlerim bittikten sonra bizi al Notification center kÄ±smÄ±ndan bir mesaj yolla ondan sonrada bir Ã¶nceki controller a geri getir  Mesela listeye bi konum ekledim  tablonun olduÄŸu ilks sayfaya bakÄ±nca gelmiyo anÄ±nda gelsin istiyorsan notification center kullanman gerekir
        NotificationCenter.default.post(name: NSNotification.Name("newPlace"), object: nil)
        navigationController?.popViewController(animated: true)  //* Mevcut sayfayÄ± geri kapatÄ±p, Ã¶nceki ekrana dÃ¶nmesini saÄŸlar.
    }
    }



