//
//  ViewController.swift
//  TravelBook
//
//  Created by Beyza Aslan on 26.02.2025.
//

import UIKit
import MapKit //harita iÃ§in
import CoreLocation //konumunu almak iÃ§in

// uygulama kapsamÄ±nda kullanÄ±cÄ±nÄ±n lokasyonunu bulmam lazÄ±m geziyo gÃ¶rÃ¼yo orayÄ± iÅŸaretlicek kaydetcek o yÃ¼zden bi onu Ã¶ÄŸrenmemiz lazÄ±m 2. si harita aÃ§Ä±ldÄ±ÄŸÄ±nda Ã§ok zoom edilmemiÅŸ ÅŸeklinde aÃ§Ä±lÄ±yo nasÄ±l zoom yapÄ±lÄ±r vs onlarÄ± ogrenemmÄ±z lazÄ±m
//kullancÄ± konumunu alma mapkit ile olmuyo aslÄ±nda  haritalarla kullanÄ±cÄ±nÄ±n konumunu almak arasÄ±nda pek bir baÄŸlantÄ± yok
class ViewController: UIViewController , MKMapViewDelegate, CLLocationManagerDelegate{

    @IBOutlet weak var mapView: MKMapView!
    //konum ile alakalÄ± birÅŸey yapÄ±yorsanÄ±z bunu kullanmanÄ±z lazÄ±m diyo yani kullanÄ±cÄ±nÄ±n konumunu alÄ±caksan kullanÄ±cÄ±nÄ±n konumu ile ilgili iÅŸlemler yapÄ±caksam ve bunu kendi haritamda gÃ¶stericeksem vs bunu kullanmam lazÄ±m
    var localtionManager:CLLocationManager!
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        mapView.delegate = self
        localtionManager = CLLocationManager()
        localtionManager.delegate = self
        localtionManager.desiredAccuracy = kCLLocationAccuracyBest //en Ã§ok pil yiyo sadece ama tam konumu bulamk iÃ§in lazÄ±m
        localtionManager.requestWhenInUseAuthorization() //app imi kullanÄ±rken
        localtionManager.startUpdatingLocation() //kullanÄ±cÄ±nÄ±n yerini bununla alÄ±yoruz
        
        let gestureRecognizer = UILongPressGestureRecognizer(target: self, action: #selector(chooseLocation(gestureRecognizer:)))
        gestureRecognizer.minimumPressDuration = 3  //3 sn basarsa bunu algÄ±la
        mapView.addGestureRecognizer(gestureRecognizer)
    }
    
    @objc func chooseLocation(gestureRecognizer: UILongPressGestureRecognizer) {
        //adam uzun bastÄ± basladÄ± mesela ya da cancel dedi falan
        if gestureRecognizer.state == .began {
               //dokunulan noktalarÄ± alÄ±cam
            let touchedPoint = gestureRecognizer.location(in: mapView)
//            convert nerden Ã§evireyim ve nereye Ã§evireyim noktayÄ± koordidnat sistemne Ã§evirecektir dokunulan koordinatlarÄ± vericek
            let touchedCoordinates = mapView.convert(touchedPoint, toCoordinateFrom: self.mapView)
            let annotation = MKPointAnnotation()
            annotation.coordinate = touchedCoordinates
            annotation.title = "Bu noktadayÄ±zz ğŸ’•"
            annotation.subtitle = "Travel Booking"
            self.mapView.addAnnotation(annotation)
        }
    }
    
    
     //bu bana gÃ¼ncellenen loksayonlarÄ± dizi iÃ§inde veriyor bana devamlÄ± gÃ¼ncelleniyo ya ondan dizi iÃ§inde veriyor gÃ¼ncellendikÃ§e lokasyonlarÄ± alabiliyorum ilk lokasyonu alsak bize yeter BU locationManager FONKSÄ°YONLA BELÄ°RTÄ°LEN ENLEM VE BOYLAMA ZOOM YAPCAK
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        //CLLocation: bu iÃ§inde enlem ve boylam barÄ±ndÄ±rÄ±yor bi tane lokasyon oluÅŸturucam bu oluÅŸturduÄŸum lokasyona zoomla dicem
        let location = CLLocationCoordinate2D(latitude: locations[0].coordinate.latitude, longitude:locations[0].coordinate.longitude)
        //zoom  seviyesi ayarlamamÄ±z lazÄ±m bide
        let span = MKCoordinateSpan(latitudeDelta: 0.5, longitudeDelta: 0.5)
        //nereyi merkez alcak locaiton kÄ±smÄ±nÄ± dedik zaten
        let region = MKCoordinateRegion(center: location, span: span)
        mapView.setRegion(region, animated: true)
    }

    
    
    
    
    
}

